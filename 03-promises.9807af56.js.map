{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAGtC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IAXaN,SAASC,cAAc,yBAe/Bc,iBAAiB,SAAS,SAAAC,GACpCA,EAAEC,iBACF,IAAIC,EAAaC,OAAOpB,EAAMqB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAcH,OAAOhB,EAAOiB,OAChC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,EAAc,EACnDC,EAAA1B,GAAS2B,OAAOC,QAAQ,yBAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAOiB,MAAOM,IAChCtB,EAAc,EAAIsB,EAAGR,EAAaQ,EAAIL,GACnCM,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALd,MACjBS,EAAA1B,GAAS2B,OAAOM,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANF,EAAM,M,IAGjDG,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAU4B,EAAKL,EAALd,MAClBS,EAAA1B,GAAS2B,OAAOC,QACd,sBAAqCM,OAAf1B,EAAS,QAAY0B,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnPromises = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbtnPromises.addEventListener('click', e => {\n  e.preventDefault();\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n  if (delayValue < 0 || stepValue < 0 || amountValue < 0) {\n    Notiflix.Notify.failure('Incorrect value.');\n    return;\n  }\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(1 + i, delayValue + i * stepValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","delayValue","Number","value","stepValue","amountValue","$parcel$interopDefault","Notify","failure","i","then","param","delay2","success","concat","catch","delay3"],"version":3,"file":"03-promises.9807af56.js.map"}